{
  "annotations": {
    "list": [
      {
        "builtIn": 1,
        "datasource": {
          "type": "grafana",
          "uid": "-- Grafana --"
        },
        "enable": true,
        "hide": true,
        "iconColor": "rgba(0, 211, 255, 1)",
        "name": "Annotations & Alerts",
        "type": "dashboard"
      }
    ]
  },
  "editable": true,
  "fiscalYearStartMonth": 0,
  "graphTooltip": 0,
  "id": 9,
  "links": [],
  "panels": [
    {
      "description": "A proof-of-concept dashboard designed for real-time monitoring of energy usage and costs, enabling data-driven decisions to optimize power efficiency in industrial settings.",
      "fieldConfig": {
        "defaults": {},
        "overrides": []
      },
      "gridPos": {
        "h": 2,
        "w": 11,
        "x": 0,
        "y": 0
      },
      "id": 4,
      "options": {
        "code": {
          "language": "plaintext",
          "showLineNumbers": false,
          "showMiniMap": false
        },
        "content": "<div style=\"display: flex; align-items: center; height: 100%;\">\n  <h1 style=\"font-family: 'Inter', sans-serif; font-weight: 600; font-size: 2em; color: #d3d3d3; margin: 0;\">\n    Settings Configuration\n  </h1>\n</div>\n",
        "mode": "markdown"
      },
      "pluginVersion": "11.3.0",
      "title": "",
      "transparent": true,
      "type": "text"
    },
    {
      "datasource": {
        "type": "grafana-postgresql-datasource",
        "uid": "be3kz7ctdto1sf"
      },
      "fieldConfig": {
        "defaults": {
          "custom": {
            "thresholdsStyle": {
              "mode": "color",
              "thresholds": []
            }
          },
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 2,
        "w": 3,
        "x": 11,
        "y": 0
      },
      "id": 13,
      "options": {
        "alwaysVisibleFilter": false,
        "autoScroll": false,
        "collapsedByDefault": false,
        "customValue": false,
        "displayMode": "minimize",
        "emptyValue": false,
        "favorites": {
          "addQuery": {},
          "datasource": "",
          "deleteQuery": {},
          "enabled": false,
          "getQuery": {},
          "storage": "browser"
        },
        "filter": false,
        "groupSelection": false,
        "header": true,
        "isUseLocalTime": false,
        "minimizeOutputFormat": "text",
        "padding": 10,
        "persistent": false,
        "saveSelectedGroup": false,
        "saveSelectedGroupKey": "",
        "showGroupTotal": false,
        "showLabel": true,
        "showName": false,
        "showResetButton": false,
        "showTotal": false,
        "statusSort": false,
        "sticky": false,
        "tabsInOrder": true,
        "variable": "User"
      },
      "pluginVersion": "3.6.0",
      "targets": [
        {
          "refId": "A"
        }
      ],
      "title": "",
      "transparent": true,
      "type": "volkovlabs-variable-panel"
    },
    {
      "datasource": {
        "type": "grafana-postgresql-datasource",
        "uid": "be3kz7ctdto1sf"
      },
      "fieldConfig": {
        "defaults": {
          "custom": {
            "thresholdsStyle": {
              "mode": "color",
              "thresholds": []
            }
          },
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 2,
        "w": 3,
        "x": 14,
        "y": 0
      },
      "id": 12,
      "options": {
        "alwaysVisibleFilter": false,
        "autoScroll": false,
        "collapsedByDefault": false,
        "customValue": false,
        "displayMode": "minimize",
        "emptyValue": false,
        "favorites": {
          "addQuery": {},
          "datasource": "",
          "deleteQuery": {},
          "enabled": false,
          "getQuery": {},
          "storage": "browser"
        },
        "filter": false,
        "groupSelection": false,
        "header": true,
        "isUseLocalTime": false,
        "minimizeOutputFormat": "text",
        "padding": 10,
        "persistent": false,
        "saveSelectedGroup": false,
        "saveSelectedGroupKey": "",
        "showGroupTotal": false,
        "showLabel": true,
        "showName": false,
        "showResetButton": false,
        "showTotal": false,
        "statusSort": false,
        "sticky": false,
        "tabsInOrder": true,
        "variable": "meter_id"
      },
      "pluginVersion": "3.6.0",
      "targets": [
        {
          "refId": "A"
        }
      ],
      "title": "",
      "transparent": true,
      "type": "volkovlabs-variable-panel"
    },
    {
      "datasource": {
        "type": "grafana-postgresql-datasource",
        "uid": "be3kz7ctdto1sf"
      },
      "fieldConfig": {
        "defaults": {
          "custom": {
            "thresholdsStyle": {
              "mode": "color",
              "thresholds": []
            }
          },
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 2,
        "w": 3,
        "x": 17,
        "y": 0
      },
      "id": 15,
      "options": {
        "alwaysVisibleFilter": false,
        "autoScroll": false,
        "collapsedByDefault": false,
        "customValue": false,
        "displayMode": "minimize",
        "emptyValue": false,
        "favorites": {
          "addQuery": {},
          "datasource": "",
          "deleteQuery": {},
          "enabled": false,
          "getQuery": {},
          "storage": "browser"
        },
        "filter": false,
        "groupSelection": false,
        "header": true,
        "isUseLocalTime": false,
        "minimizeOutputFormat": "text",
        "padding": 10,
        "persistent": false,
        "saveSelectedGroup": false,
        "saveSelectedGroupKey": "",
        "showGroupTotal": false,
        "showLabel": true,
        "showName": false,
        "showResetButton": false,
        "showTotal": false,
        "statusSort": false,
        "sticky": false,
        "tabsInOrder": true,
        "variable": "day"
      },
      "pluginVersion": "3.6.0",
      "targets": [
        {
          "refId": "A"
        }
      ],
      "title": "",
      "transparent": true,
      "type": "volkovlabs-variable-panel"
    },
    {
      "datasource": {
        "type": "grafana-postgresql-datasource",
        "uid": "be3kz7ctdto1sf"
      },
      "fieldConfig": {
        "defaults": {
          "custom": {
            "thresholdsStyle": {
              "mode": "color",
              "thresholds": []
            }
          },
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 2,
        "w": 4,
        "x": 20,
        "y": 0
      },
      "id": 2,
      "options": {
        "alwaysVisibleFilter": false,
        "autoScroll": false,
        "collapsedByDefault": false,
        "customValue": false,
        "dashboardVariable": "pg_uid",
        "displayMode": "minimize",
        "emptyValue": false,
        "favorites": {
          "enabled": false,
          "storage": "browser"
        },
        "filter": false,
        "groupSelection": false,
        "header": true,
        "isUseLocalTime": false,
        "minimizeOutputFormat": "text",
        "padding": 10,
        "persistent": false,
        "saveSelectedGroup": false,
        "saveSelectedGroupKey": "",
        "showGroupTotal": false,
        "showLabel": true,
        "showName": false,
        "showResetButton": false,
        "showTotal": false,
        "statusSort": false,
        "sticky": false,
        "tabsInOrder": true,
        "variable": "Pages"
      },
      "pluginVersion": "3.6.0",
      "targets": [
        {
          "refId": "A"
        }
      ],
      "title": "",
      "transparent": true,
      "type": "volkovlabs-variable-panel"
    },
    {
      "datasource": {
        "type": "grafana-postgresql-datasource",
        "uid": "be3kz7ctdto1sf"
      },
      "fieldConfig": {
        "defaults": {},
        "overrides": []
      },
      "gridPos": {
        "h": 6,
        "w": 7,
        "x": 0,
        "y": 2
      },
      "id": 5,
      "options": {
        "buttonGroup": {
          "orientation": "center",
          "size": "md"
        },
        "confirmModal": {
          "body": "Please confirm to update changed values",
          "cancel": "Cancel",
          "columns": {
            "include": [
              "name",
              "oldValue",
              "newValue"
            ],
            "name": "Label",
            "newValue": "New Value",
            "oldValue": "Old Value"
          },
          "confirm": "Confirm",
          "elementDisplayMode": "all",
          "title": "Confirm update request"
        },
        "elementValueChanged": "// This function runs when the element value is changed\r\nconst user_id = context.panel.fields.user_id;\r\nconst kwh_rate = context.panel.fields.kwh_rate;\r\nconst target_usage = context.panel.fields.target_usage;\r\n\r\n// Display the updated values in a notification or in the panel directly\r\ncontext.grafana.notifySuccess([\r\n  'Values Updated',\r\n  `New User ID: ${user_id}\\nNew kWh Rate: ${kwh_rate}\\nNew Target Usage: ${target_usage}`\r\n]);\r\n\r\n// Optionally, you can also log it to the console for debugging purposes\r\nconsole.log(`Updated User ID: ${user_id}, Updated Energy Rate: ${kwh_rate}, Updated Target Usage: ${target_usage}`);\r\n",
        "elements": [
          {
            "allowCustomValue": false,
            "id": "user_id",
            "labelWidth": 18,
            "options": [
              {
                "icon": "users-alt",
                "id": "Admin",
                "label": "Admin",
                "type": "string",
                "value": "Admin"
              },
              {
                "icon": "user",
                "id": "Tenant 1",
                "label": "Tenant 1",
                "type": "string",
                "value": "Tenant 1"
              },
              {
                "icon": "user",
                "id": "Tenant 2",
                "label": "Tenant 2",
                "type": "string",
                "value": "Tenant 2"
              },
              {
                "icon": "user",
                "id": "Tenant 3",
                "label": "Tenant 3",
                "type": "string",
                "value": "Tenant 3"
              },
              {
                "icon": "user",
                "id": "Tenant 4",
                "label": "Tenant 4",
                "type": "string",
                "value": "Tenant 4"
              },
              {
                "icon": "user",
                "id": "Tenant 5",
                "label": "Tenant 5",
                "type": "string",
                "value": "Tenant 5"
              }
            ],
            "optionsSource": "Custom",
            "section": "",
            "title": "User",
            "tooltip": "",
            "type": "select",
            "uid": "581c6bea-8957-4c4a-add6-f01f91d180bb",
            "unit": "",
            "value": "Admin",
            "width": 16
          },
          {
            "disabled": false,
            "id": "kwh_rate",
            "labelColor": "#FADE2A",
            "labelWidth": 18,
            "max": 13,
            "min": 9,
            "options": [],
            "section": "",
            "title": "Energy Cost Rate",
            "tooltip": "",
            "type": "number",
            "uid": "a5328581-0c4d-4853-87a2-806ebaed3b49",
            "unit": "PHP",
            "value": 11.7882,
            "width": 16
          },
          {
            "background": "",
            "disabled": false,
            "fieldName": "target_usage",
            "id": "target_usage",
            "labelBackground": "",
            "labelColor": "#8AB8FF",
            "labelWidth": 18,
            "options": [],
            "section": "",
            "title": "Target Usage",
            "tooltip": "",
            "type": "number",
            "uid": "79645549-4d0e-420a-a6d7-64887737d6c5",
            "unit": "kWh",
            "value": 32000,
            "width": 16
          }
        ],
        "initial": {
          "code": "console.log(context.panel.data, context.panel.response, context.panel.initial, context.panel.elements);\n\nreturn;\n\n/**\n * Data Source\n * Requires form elements to be defined\n */\nconst dataQuery = context.utils.toDataQueryResponse(context.panel.response);\nconsole.log(dataQuery);",
          "contentType": "application/json",
          "datasource": "",
          "getPayload": "return {}",
          "highlight": true,
          "highlightColor": "blue",
          "method": "-",
          "payload": {},
          "url": "http://localhost:3001/"
        },
        "layout": {
          "orientation": "vertical",
          "padding": 10,
          "sectionVariant": "default",
          "sections": [],
          "variant": "single"
        },
        "reset": {
          "backgroundColor": "purple",
          "foregroundColor": "yellow",
          "icon": "process",
          "text": "Reset",
          "variant": "secondary"
        },
        "resetAction": {
          "code": "context.panel.onOptionsChange({\n  ...context.panel.options,\n  elements: context.panel.options.elements.map((element) => {\n    return element.id === \"name\" ? { ...element, value: \"test\" } : element;\n  }),\n});",
          "confirm": true,
          "getPayload": "return {}",
          "mode": "custom",
          "payload": {}
        },
        "saveDefault": {
          "icon": "save",
          "text": "Save Default",
          "variant": "secondary"
        },
        "saveDefaultAction": {
          "code": "if (context.panel.response) {\n  context.grafana.notifySuccess(['Save Default', 'Default values saved successfully.']);\n} else {\n  context.grafana.notifyError(['Save Default', 'An error occurred saving default values.']);\n}",
          "confirm": true,
          "getPayload": "return {}",
          "mode": "initial",
          "payload": {}
        },
        "submit": {
          "backgroundColor": "purple",
          "foregroundColor": "yellow",
          "icon": "cloud-upload",
          "text": "Submit",
          "variant": "primary"
        },
        "sync": false,
        "update": {
          "code": "console.log(context.panel.fields);\nconst user_id = document.getElementById('user_id');\nconst kwh_rate = parseFloat(document.getElementById('kwh_rate')?.value);\nconst target_usage = parseInt(document.getElementById('target_usage')?.value);\n\n\n// Prepare the data payload\nconst data = {\n  user_id,\n  kwh_rate,\n  target_usage\n};\n\n",
          "confirm": true,
          "contentType": "application/json",
          "datasource": "",
          "getPayload": "const payload = {};\n\ncontext.panel.elements.forEach((element) => {\n  if (!element.value) {\n    return;\n  }\n\n  payload[element.id] = element.value;\n})\n\nreturn payload;",
          "header": [],
          "method": "POST",
          "payload": {
            "editorMode": "builder",
            "format": "table",
            "rawQuery": true,
            "rawSql": "SELECT user_id, kwh_rate, target_usage FROM user_inputs LIMIT 50 ",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [
                    {
                      "name": "user_id",
                      "type": "functionParameter"
                    }
                  ],
                  "type": "function"
                },
                {
                  "parameters": [
                    {
                      "name": "kwh_rate",
                      "type": "functionParameter"
                    }
                  ],
                  "type": "function"
                },
                {
                  "parameters": [
                    {
                      "name": "target_usage",
                      "type": "functionParameter"
                    }
                  ],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            },
            "table": "user_inputs"
          },
          "payloadMode": "all",
          "url": "http://localhost:3001/user_inputs"
        },
        "updateEnabled": "auto"
      },
      "pluginVersion": "5.0.0",
      "targets": [
        {
          "datasource": {
            "type": "marcusolsson-static-datasource",
            "uid": "ee3snnhkpmfb4d"
          },
          "refId": "A"
        }
      ],
      "title": "Set  Cost Rate and Target Usage",
      "type": "volkovlabs-form-panel"
    },
    {
      "datasource": {
        "type": "grafana-postgresql-datasource",
        "uid": "be3kz7ctdto1sf"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "align": "center",
            "cellOptions": {
              "type": "auto"
            },
            "inspect": false
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 6,
        "w": 5,
        "x": 7,
        "y": 2
      },
      "id": 10,
      "options": {
        "cellHeight": "sm",
        "footer": {
          "countRows": false,
          "fields": "",
          "reducer": [
            "sum"
          ],
          "show": false
        },
        "showHeader": true
      },
      "pluginVersion": "11.3.0",
      "targets": [
        {
          "editorMode": "code",
          "format": "table",
          "rawQuery": true,
          "rawSql": "SELECT\r\n    user_id,\r\n    kwh_rate, \r\n    target_usage\r\nFROM \r\n    user_inputs\r\nWHERE \r\n    user_id = '${User}'\r\nORDER BY \r\n    created_at DESC\r\nLIMIT 1;\r\n",
          "refId": "A",
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          }
        }
      ],
      "title": "Cost Rate and Target Usage",
      "transformations": [
        {
          "id": "transpose",
          "options": {
            "firstFieldName": "User"
          }
        }
      ],
      "type": "table"
    },
    {
      "datasource": {
        "type": "grafana-postgresql-datasource",
        "uid": "be3kz7ctdto1sf"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "align": "center",
            "cellOptions": {
              "type": "auto"
            },
            "inspect": false
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 17,
        "w": 6,
        "x": 12,
        "y": 2
      },
      "id": 14,
      "options": {
        "cellHeight": "sm",
        "footer": {
          "countRows": false,
          "fields": "",
          "reducer": [
            "sum"
          ],
          "show": false
        },
        "showHeader": false
      },
      "pluginVersion": "11.3.0",
      "targets": [
        {
          "editorMode": "code",
          "format": "table",
          "rawQuery": true,
          "rawSql": "SELECT \r\n    meter_id,\r\n    max_v,\r\n    voltage_imbalance,\r\n    warning_current,\r\n    trip_off_current,\r\n    kvar_max,\r\n    kvar_imbalance,\r\n    kw_max,\r\n    kw_imbalance,\r\n    pf_max AS pf_min,\r\n    vthd_limit,\r\n    ithd_limit\r\nFROM \r\n    thresholds\r\nWHERE \r\n    meter_id = '${meter_id}'  -- Use your dynamic filter variable here\r\nORDER BY \r\n    timestamp DESC\r\nLIMIT 1;\r\n",
          "refId": "A",
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          }
        }
      ],
      "title": "Thresholds",
      "transformations": [
        {
          "id": "transpose",
          "options": {
            "firstFieldName": "Meter"
          }
        }
      ],
      "type": "table"
    },
    {
      "datasource": {
        "type": "grafana-postgresql-datasource",
        "uid": "be3kz7ctdto1sf"
      },
      "fieldConfig": {
        "defaults": {},
        "overrides": []
      },
      "gridPos": {
        "h": 17,
        "w": 6,
        "x": 18,
        "y": 2
      },
      "id": 6,
      "options": {
        "buttonGroup": {
          "orientation": "center",
          "size": "md"
        },
        "confirmModal": {
          "body": "Please confirm to update changed values",
          "cancel": "Cancel",
          "columns": {
            "include": [
              "name",
              "oldValue",
              "newValue"
            ],
            "name": "Label",
            "newValue": "New Value",
            "oldValue": "Old Value"
          },
          "confirm": "Confirm",
          "elementDisplayMode": "all",
          "title": "Confirm update request"
        },
        "elementValueChanged": "// Assuming context.panel.fields contains the threshold data\r\nconst max_v = context.panel.fields.max_v;\r\nconst voltage_imbalance = context.panel.fields.voltage_imbalance;\r\nconst warning_current = context.panel.fields.warning_current;\r\nconst trip_off_current = context.panel.fields.trip_off_current;\r\nconst kVAR_max = context.panel.fields.kVAR_max;\r\nconst kVAR_imbalance = context.panel.fields.kVAR_imbalance;\r\nconst kW_max = context.panel.fields.kW_max;\r\nconst kW_imbalance = context.panel.fields.kW_imbalance;\r\nconst pf_max = context.panel.fields.pf_max;\r\nconst vTHD_limit = context.panel.fields.vTHD_limit;\r\nconst iTHD_limit = context.panel.fields.iTHD_limit;\r\n\r\n// Display the updated values in a notification\r\ncontext.grafana.notifySuccess([\r\n  'Threshold Values Updated',\r\n  `Max Voltage: ${max_v}\\nVoltage Imbalance: ${voltage_imbalance}\\nWarning Current: ${warning_current}\\nTrip Off Current: ${trip_off_current}\\nkVAR Max: ${kVAR_max}\\nkVAR Imbalance: ${kVAR_imbalance}\\nkW Max: ${kW_max}\\nkW Imbalance: ${kW_imbalance}\\nPower Factor Max: ${pf_max}\\nVoltage THD Limit: ${vTHD_limit}\\nCurrent THD Limit: ${iTHD_limit}`\r\n]);\r\n\r\n// Log the updated values for debugging\r\nconsole.log('Threshold Fields:', context.panel.fields);\r\nconsole.log(`Max Voltage: ${max_v}, Voltage Imbalance: ${voltage_imbalance}, Warning Current: ${warning_current}, Trip Off Current: ${trip_off_current}, kVAR Max: ${kVAR_max}, kVAR Imbalance: ${kVAR_imbalance}, kW Max: ${kW_max}, kW Imbalance: ${kW_imbalance}, Power Factor Max: ${pf_max}, Voltage THD Limit: ${vTHD_limit}, Current THD Limit: ${iTHD_limit}`);\r\n",
        "elements": [
          {
            "allowCustomValue": false,
            "disabled": false,
            "id": "meter_id",
            "labelColor": "",
            "labelWidth": 18,
            "options": [
              {
                "icon": "plus-square",
                "id": "1",
                "label": "1",
                "type": "number",
                "value": 1
              },
              {
                "icon": "plus-square",
                "id": "2",
                "label": "2",
                "type": "number",
                "value": 2
              },
              {
                "icon": "plus-square",
                "id": "3",
                "label": "3",
                "type": "number",
                "value": 3
              },
              {
                "icon": "plus-square",
                "id": "4",
                "label": "4",
                "type": "number",
                "value": 4
              },
              {
                "icon": "plus-square",
                "id": "5",
                "label": "5",
                "type": "number",
                "value": 5
              }
            ],
            "optionsSource": "Custom",
            "section": "general",
            "title": "Meter ID",
            "tooltip": "",
            "type": "select",
            "uid": "10c6ba61-68db-4dcd-8982-a0d8c3cc2140",
            "unit": "",
            "value": 4,
            "width": 14
          },
          {
            "disabled": false,
            "id": "max_v",
            "labelColor": "#FADE2A",
            "labelWidth": 18,
            "max": 250,
            "min": 100,
            "options": [],
            "section": "supply_voltage",
            "title": "Maximum Voltage",
            "tooltip": "",
            "type": "number",
            "uid": "a5328581-0c4d-4853-87a2-806ebaed3b49",
            "unit": "V",
            "value": 225,
            "width": 14
          },
          {
            "background": "",
            "disabled": false,
            "fieldName": "target_usage",
            "id": "voltage_imbalance",
            "labelBackground": "",
            "labelColor": "#FFA6B0",
            "labelWidth": 18,
            "options": [],
            "section": "supply_voltage",
            "title": "Voltage Imbalance",
            "tooltip": "",
            "type": "number",
            "uid": "79645549-4d0e-420a-a6d7-64887737d6c5",
            "unit": "%",
            "value": 3,
            "width": 14
          },
          {
            "disabled": false,
            "id": "warning_current",
            "labelColor": "#FADE2A",
            "labelWidth": 18,
            "options": [],
            "section": "line_current",
            "title": "Warning Current",
            "tooltip": "",
            "type": "number",
            "uid": "57bb597a-704f-467c-ba38-2cd4d25a661c",
            "unit": "A",
            "value": 31,
            "width": 14
          },
          {
            "disabled": false,
            "id": "trip_off_current",
            "labelColor": "#FFA6B0",
            "labelWidth": 18,
            "options": [],
            "section": "line_current",
            "title": "Trip-Off Current",
            "tooltip": "",
            "type": "number",
            "uid": "89444841-1161-432e-9acc-e981c570fa99",
            "unit": "A",
            "value": 33,
            "width": 14
          },
          {
            "disabled": false,
            "id": "kVAR_max",
            "labelColor": "#FADE2A",
            "labelWidth": 18,
            "options": [],
            "section": "",
            "title": "Maximum kVAR",
            "tooltip": "",
            "type": "number",
            "uid": "adc818da-808d-4696-b20c-d5cace53dfb7",
            "unit": "kVAR",
            "value": 5,
            "width": 14
          },
          {
            "disabled": false,
            "id": "kVAR_imbalance",
            "labelColor": "#FFA6B0",
            "labelWidth": 18,
            "options": [],
            "section": "",
            "title": "kVAR Imbalance",
            "tooltip": "",
            "type": "number",
            "uid": "447938ef-92ab-4aa4-84b5-c125b19a3e28",
            "unit": "%",
            "value": 3,
            "width": 14
          },
          {
            "disabled": false,
            "id": "kW_max",
            "labelBackground": "",
            "labelColor": "#FADE2A",
            "labelWidth": 18,
            "options": [],
            "section": "",
            "title": "Maximum kW",
            "tooltip": "",
            "type": "number",
            "uid": "18a440ab-91c2-465f-9471-1d500c7528f2",
            "unit": "kW",
            "value": 72,
            "width": 14
          },
          {
            "disabled": false,
            "id": "kW_imbalance",
            "labelColor": "#FFA6B0",
            "labelWidth": 18,
            "options": [],
            "section": "",
            "title": "kW Imbalance",
            "tooltip": "",
            "type": "number",
            "uid": "9b1e13ea-fa36-4ff1-b205-6c0997e8dd06",
            "unit": "%",
            "value": 3,
            "width": 14
          },
          {
            "disabled": false,
            "id": "pf_max",
            "labelBackground": "",
            "labelColor": "#8AB8FF",
            "labelWidth": 18,
            "options": [],
            "section": "",
            "title": "Minimum PF",
            "tooltip": "",
            "type": "number",
            "uid": "e60c77b1-dfea-4219-9786-8af1d4db66bc",
            "unit": "",
            "value": 0.9,
            "width": 14
          },
          {
            "disabled": false,
            "id": "vTHD_limit",
            "labelColor": "#FADE2A",
            "labelWidth": 18,
            "options": [],
            "section": "",
            "title": "vTHD Limit",
            "tooltip": "",
            "type": "number",
            "uid": "9c81e40c-c0b5-4cb6-a56c-19d39761cc69",
            "unit": "%",
            "value": 4,
            "width": 14
          },
          {
            "disabled": false,
            "id": "iTHD_limit",
            "labelColor": "#FADE2A",
            "labelWidth": 18,
            "options": [],
            "section": "",
            "title": "ITHD Limit",
            "tooltip": "",
            "type": "number",
            "uid": "38127c0e-aa96-4d8b-b9e5-4425e9a2c1fb",
            "unit": "%",
            "value": 4,
            "width": 14
          }
        ],
        "initial": {
          "code": "console.log(context.panel.data, context.panel.response, context.panel.initial, context.panel.elements);\n\nreturn;\n\n/**\n * Data Source\n * Requires form elements to be defined\n */\nconst dataQuery = context.utils.toDataQueryResponse(context.panel.response);\nconsole.log(dataQuery);",
          "contentType": "application/json",
          "datasource": "",
          "getPayload": "return {}",
          "highlight": true,
          "highlightColor": "blue",
          "method": "-",
          "payload": {},
          "url": "http://localhost:3001/"
        },
        "layout": {
          "orientation": "vertical",
          "padding": 10,
          "sectionVariant": "default",
          "sections": [
            {
              "id": "general",
              "name": ""
            },
            {
              "id": "supply_voltage",
              "name": "Supply Voltage"
            },
            {
              "id": "line_current",
              "name": "Line Current"
            },
            {
              "id": "",
              "name": ""
            }
          ],
          "variant": "single"
        },
        "reset": {
          "backgroundColor": "purple",
          "foregroundColor": "yellow",
          "icon": "process",
          "text": "Reset",
          "variant": "secondary"
        },
        "resetAction": {
          "code": "context.panel.onOptionsChange({\n  ...context.panel.options,\n  elements: context.panel.options.elements.map((element) => {\n    return element.id === \"name\" ? { ...element, value: \"test\" } : element;\n  }),\n});",
          "confirm": true,
          "getPayload": "return {}",
          "mode": "custom",
          "payload": {}
        },
        "saveDefault": {
          "icon": "save",
          "text": "Save Default",
          "variant": "secondary"
        },
        "submit": {
          "backgroundColor": "purple",
          "foregroundColor": "yellow",
          "icon": "cloud-upload",
          "text": "Submit",
          "variant": "primary"
        },
        "sync": false,
        "update": {
          "code": "//const table = \"thresholds\";\r\n// Constants derived from the provided configuration\r\nconst max_v = parseFloat(document.getElementById('max_v')?.value);\r\nconst voltage_imbalance = parseFloat(document.getElementById('voltage_imbalance')?.value);\r\nconst warning_current = parseFloat(document.getElementById('warning_current')?.value);\r\nconst trip_off_current = parseFloat(document.getElementById('trip_off_current')?.value);\r\nconst kVAR_max = parseFloat(document.getElementById('kVAR_max')?.value);\r\nconst kVAR_imbalance = parseFloat(document.getElementById('kVAR_imbalance')?.value);\r\nconst kW_max = parseFloat(document.getElementById('kW_max')?.value);\r\nconst kW_imbalance = parseFloat(document.getElementById('kW_imbalance')?.value);\r\nconst pf_max = parseFloat(document.getElementById('pf_max')?.value);\r\nconst vTHD_limit = parseFloat(document.getElementById('vTHD_limit')?.value);\r\nconst iTHD_limit = parseFloat(document.getElementById('iTHD_limit')?.value);\r\n\r\n// Prepare the data payload\r\nconst data = {\r\n  //table: \"thresholds\", // Specify the target table for the API\r\n  max_v,\r\n  voltage_imbalance,\r\n  warning_current,\r\n  trip_off_current,\r\n  kVAR_max,\r\n  kVAR_imbalance,\r\n  kW_max,\r\n  kW_imbalance,\r\n  pf_max,\r\n  vTHD_limit,\r\n  iTHD_limit\r\n};\r\n",
          "confirm": true,
          "contentType": "application/json",
          "datasource": "",
          "getPayload": "const payload = {};\n\ncontext.panel.elements.forEach((element) => {\n  if (!element.value) {\n    return;\n  }\n\n  payload[element.id] = element.value;\n})\n\nreturn payload;",
          "header": [],
          "method": "POST",
          "payload": {
            "editorMode": "builder",
            "format": "table",
            "rawQuery": true,
            "rawSql": "SELECT user_id, kwh_rate, target_usage FROM user_inputs LIMIT 50 ",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [
                    {
                      "name": "user_id",
                      "type": "functionParameter"
                    }
                  ],
                  "type": "function"
                },
                {
                  "parameters": [
                    {
                      "name": "kwh_rate",
                      "type": "functionParameter"
                    }
                  ],
                  "type": "function"
                },
                {
                  "parameters": [
                    {
                      "name": "target_usage",
                      "type": "functionParameter"
                    }
                  ],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            },
            "table": "user_inputs"
          },
          "payloadMode": "all",
          "url": "http://localhost:3001/thresholds"
        },
        "updateEnabled": "auto"
      },
      "pluginVersion": "5.0.0",
      "targets": [
        {
          "datasource": {
            "type": "marcusolsson-static-datasource",
            "uid": "ee3snnhkpmfb4d"
          },
          "frame": {
            "fields": [],
            "meta": {}
          },
          "refId": "A"
        },
        {
          "datasource": {
            "type": "marcusolsson-static-datasource",
            "uid": "ee3snnhkpmfb4d"
          },
          "hide": false,
          "refId": "B"
        }
      ],
      "title": "Set Thresholds",
      "type": "volkovlabs-form-panel"
    },
    {
      "datasource": {
        "type": "grafana-postgresql-datasource",
        "uid": "be3kz7ctdto1sf"
      },
      "fieldConfig": {
        "defaults": {},
        "overrides": []
      },
      "gridPos": {
        "h": 11,
        "w": 7,
        "x": 0,
        "y": 8
      },
      "id": 8,
      "options": {
        "buttonGroup": {
          "orientation": "center",
          "size": "md"
        },
        "confirmModal": {
          "body": "Please confirm to update changed values",
          "cancel": "Cancel",
          "columns": {
            "include": [
              "name",
              "oldValue",
              "newValue"
            ],
            "name": "Label",
            "newValue": "New Value",
            "oldValue": "Old Value"
          },
          "confirm": "Confirm",
          "elementDisplayMode": "modified",
          "title": "Confirm update request"
        },
        "elementValueChanged": "// This function runs when the element value is changed\r\nconst meter_id = context.panel.fields.meter_id;\r\nconst day = context.panel.fields.day;\r\nconst peak_rate = context.panel.fields.peak_rate;\r\nconst off_peak_rate = context.panel.fields.off_peak_rate;\r\nconst peak_hour_start = context.panel.fields.peak_hour_start;\r\nconst peak_hour_end = context.panel.fields.peak_hour_end;\r\nconst off_peak_hour_start = context.panel.fields.off_peak_start;\r\nconst off_peak_hour_end = context.panel.fields.off_peak_end;\r\n\r\n// Display the updated values in a notification or in the panel directly\r\ncontext.grafana.notifySuccess([\r\n  'Values Updated',\r\n  `Meter ID: ${meter_id}\\nDay: ${day}\\nPeak Rate: ${peak_rate}\\nOff-Peak Rate: ${off_peak_rate}\\nPeak Hour Start: ${peak_hour_start}\\nPeak Hour End: ${peak_hour_end}\\nOff-Peak Start: ${off_peak_start}\\nOff-Peak End: ${off_peak_end}`\r\n]);\r\n\r\n// Optionally, you can also log it to the console for debugging purposes\r\nconsole.log(`Updated Meter ID: ${meter_id}, Day: ${day}, Peak Rate: ${peak_rate}, Off-Peak Rate: ${off_peak_rate}, Peak Hour Start: ${peak_hour_start}, Peak Hour End: ${peak_hour_end}, Off-Peak Start: ${off_peak_hour_start}, Off-Peak End: ${off_peak_hour_end}`);\r\n",
        "elements": [
          {
            "allowCustomValue": false,
            "id": "meter_id",
            "labelWidth": 18,
            "options": [
              {
                "icon": "plus-square",
                "id": "1",
                "label": "1",
                "type": "number",
                "value": 1
              },
              {
                "icon": "plus-square",
                "id": "2",
                "label": "2",
                "type": "number",
                "value": 2
              },
              {
                "icon": "plus-square",
                "id": "3",
                "label": "3",
                "type": "number",
                "value": 3
              },
              {
                "icon": "plus-square",
                "id": "4",
                "label": "4",
                "type": "number",
                "value": 4
              },
              {
                "icon": "plus-square",
                "id": "5",
                "label": "5",
                "type": "number",
                "value": 5
              }
            ],
            "optionsSource": "Custom",
            "section": "",
            "title": "Meter ID",
            "tooltip": "",
            "type": "select",
            "uid": "2a104dcc-3393-4fe6-b9a0-4e4d2bc85e92",
            "unit": "",
            "value": "",
            "width": 27
          },
          {
            "allowCustomValue": false,
            "background": "",
            "id": "day",
            "labelColor": "#5794F2",
            "labelWidth": 18,
            "options": [
              {
                "icon": "calendar-alt",
                "id": "sunday",
                "label": "Sunday",
                "type": "string",
                "value": "sunday"
              },
              {
                "icon": "calendar-alt",
                "id": "monday",
                "label": "Monday",
                "type": "string",
                "value": "monday"
              },
              {
                "icon": "calendar-alt",
                "id": "tuesday",
                "label": "Tuesday",
                "type": "string",
                "value": "tuesday"
              },
              {
                "icon": "calendar-alt",
                "id": "wednesday",
                "label": "Wednesday",
                "type": "string",
                "value": "wednesday"
              },
              {
                "icon": "calendar-alt",
                "id": "thursday",
                "label": "Thursday",
                "type": "string",
                "value": "thursday"
              },
              {
                "icon": "calendar-alt",
                "id": "friday",
                "label": "Friday",
                "type": "string",
                "value": "friday"
              },
              {
                "icon": "calendar-alt",
                "id": "saturday",
                "label": "Saturday",
                "type": "string",
                "value": "saturday"
              }
            ],
            "optionsSource": "Custom",
            "section": "",
            "title": "Day",
            "tooltip": "",
            "type": "select",
            "uid": "2b2c821b-76fe-4cef-bec1-b52ede0ccc2d",
            "unit": "",
            "value": "",
            "width": 27
          },
          {
            "background": "",
            "id": "peak_rate",
            "labelColor": "#96D98D",
            "labelWidth": 18,
            "section": "mon",
            "title": "Peak Rate",
            "tooltip": "",
            "type": "number",
            "uid": "ff11573b-3ae0-4c66-b9ae-f5d3beecb0be",
            "unit": "",
            "value": 0,
            "width": 27
          },
          {
            "background": "",
            "id": "off_peak_rate",
            "labelColor": "#96D98D",
            "labelWidth": 18,
            "section": "mon",
            "title": "Off-Peak Rate",
            "tooltip": "",
            "type": "number",
            "uid": "2dd47633-2513-4c02-a143-457039a13d92",
            "unit": "",
            "value": 0,
            "width": 27
          },
          {
            "allowCustomValue": false,
            "id": "peak_hour_start",
            "labelColor": "#FFCB7D",
            "labelWidth": 18,
            "options": [
              {
                "icon": "clock-nine",
                "id": "00:00",
                "label": "00:00",
                "type": "string",
                "value": "00:00"
              },
              {
                "icon": "clock-nine",
                "id": "01:00",
                "label": "01:00",
                "type": "string",
                "value": "01:00"
              },
              {
                "icon": "clock-nine",
                "id": "02:00",
                "label": "02:00",
                "type": "string",
                "value": "02:00"
              },
              {
                "icon": "clock-nine",
                "id": "03:00",
                "label": "03:00",
                "type": "string",
                "value": "03:00"
              },
              {
                "icon": "clock-nine",
                "id": "04:00",
                "label": "04:00",
                "type": "string",
                "value": "04:00"
              },
              {
                "icon": "clock-nine",
                "id": "05:00",
                "label": "05:00",
                "type": "string",
                "value": "05:00"
              },
              {
                "icon": "clock-nine",
                "id": "06:00",
                "label": "06:00",
                "type": "string",
                "value": "06:00"
              },
              {
                "icon": "clock-nine",
                "id": "07:00",
                "label": "07:00",
                "type": "string",
                "value": "07:00"
              },
              {
                "icon": "clock-nine",
                "id": "08:00",
                "label": "08:00",
                "type": "string",
                "value": "08:00"
              },
              {
                "icon": "clock-nine",
                "id": "09:00",
                "label": "09:00",
                "type": "string",
                "value": "09:00"
              },
              {
                "icon": "clock-nine",
                "id": "10:00",
                "label": "10:00",
                "type": "string",
                "value": "10:00"
              },
              {
                "icon": "clock-nine",
                "id": "11:00",
                "label": "11:00",
                "type": "string",
                "value": "11:00"
              },
              {
                "icon": "clock-nine",
                "id": "12:00",
                "label": "12:00",
                "type": "string",
                "value": "12:00"
              },
              {
                "icon": "clock-nine",
                "id": "13:00",
                "label": "13:00",
                "type": "string",
                "value": "13:00"
              },
              {
                "icon": "clock-nine",
                "id": "14:00",
                "label": "14:00",
                "type": "string",
                "value": "14:00"
              },
              {
                "icon": "clock-nine",
                "id": "15:00",
                "label": "15:00",
                "type": "string",
                "value": "15:00"
              },
              {
                "icon": "clock-nine",
                "id": "16:00",
                "label": "16:00",
                "type": "string",
                "value": "16:00"
              },
              {
                "icon": "clock-nine",
                "id": "17:00",
                "label": "17:00",
                "type": "string",
                "value": "17:00"
              },
              {
                "icon": "clock-nine",
                "id": "18:00",
                "label": "18:00",
                "type": "string",
                "value": "18:00"
              },
              {
                "icon": "clock-nine",
                "id": "19:00",
                "label": "19:00",
                "type": "string",
                "value": "19:00"
              },
              {
                "icon": "clock-nine",
                "id": "20:00",
                "label": "20:00",
                "type": "string",
                "value": "20:00"
              },
              {
                "icon": "clock-nine",
                "id": "21:00",
                "label": "21:00",
                "type": "string",
                "value": "21:00"
              },
              {
                "icon": "clock-nine",
                "id": "22:00",
                "label": "22:00",
                "type": "string",
                "value": "22:00"
              },
              {
                "icon": "clock-nine",
                "id": "23:00",
                "label": "23:00",
                "type": "string",
                "value": "23:00"
              },
              {
                "icon": "clock-nine",
                "id": "24:00",
                "label": "24:00",
                "type": "string",
                "value": "24:00"
              }
            ],
            "optionsSource": "Custom",
            "section": "mon",
            "title": "Peak Hour Start",
            "tooltip": "",
            "type": "select",
            "uid": "c4f92338-7b67-4980-b6bf-b21bae5050a9",
            "unit": "",
            "value": "",
            "width": 27
          },
          {
            "allowCustomValue": false,
            "getOptions": "",
            "id": "peak_hour_end",
            "labelColor": "#FFF899",
            "labelWidth": 18,
            "options": [
              {
                "icon": "clock-nine",
                "id": "00:00",
                "label": "00:00",
                "type": "string",
                "value": "00:00"
              },
              {
                "icon": "clock-nine",
                "id": "01:00",
                "label": "01:00",
                "type": "string",
                "value": "01:00"
              },
              {
                "icon": "clock-nine",
                "id": "02:00",
                "label": "02:00",
                "type": "string",
                "value": "02:00"
              },
              {
                "icon": "clock-nine",
                "id": "03:00",
                "label": "03:00",
                "type": "string",
                "value": "03:00"
              },
              {
                "icon": "clock-nine",
                "id": "04:00",
                "label": "04:00",
                "type": "string",
                "value": "04:00"
              },
              {
                "icon": "clock-nine",
                "id": "05:00",
                "label": "05:00",
                "type": "string",
                "value": "05:00"
              },
              {
                "icon": "clock-nine",
                "id": "06:00",
                "label": "06:00",
                "type": "string",
                "value": "06:00"
              },
              {
                "icon": "clock-nine",
                "id": "07:00",
                "label": "07:00",
                "type": "string",
                "value": "07:00"
              },
              {
                "icon": "clock-nine",
                "id": "08:00",
                "label": "08:00",
                "type": "string",
                "value": "08:00"
              },
              {
                "icon": "clock-nine",
                "id": "09:00",
                "label": "09:00",
                "type": "string",
                "value": "09:00"
              },
              {
                "icon": "clock-nine",
                "id": "10:00",
                "label": "10:00",
                "type": "string",
                "value": "10:00"
              },
              {
                "icon": "clock-nine",
                "id": "11:00",
                "label": "11:00",
                "type": "string",
                "value": "11:00"
              },
              {
                "icon": "clock-nine",
                "id": "12:00",
                "label": "12:00",
                "type": "string",
                "value": "12:00"
              },
              {
                "icon": "clock-nine",
                "id": "13:00",
                "label": "13:00",
                "type": "string",
                "value": "13:00"
              },
              {
                "icon": "clock-nine",
                "id": "14:00",
                "label": "14:00",
                "type": "string",
                "value": "14:00"
              },
              {
                "icon": "clock-nine",
                "id": "15:00",
                "label": "15:00",
                "type": "string",
                "value": "15:00"
              },
              {
                "icon": "clock-nine",
                "id": "16:00",
                "label": "16:00",
                "type": "string",
                "value": "16:00"
              },
              {
                "icon": "clock-nine",
                "id": "17:00",
                "label": "17:00",
                "type": "string",
                "value": "17:00"
              },
              {
                "icon": "clock-nine",
                "id": "18:00",
                "label": "18:00",
                "type": "string",
                "value": "18:00"
              },
              {
                "icon": "clock-nine",
                "id": "19:00",
                "label": "19:00",
                "type": "string",
                "value": "19:00"
              },
              {
                "icon": "clock-nine",
                "id": "20:00",
                "label": "20:00",
                "type": "string",
                "value": "20:00"
              },
              {
                "icon": "clock-nine",
                "id": "21:00",
                "label": "21:00",
                "type": "string",
                "value": "21:00"
              },
              {
                "icon": "clock-nine",
                "id": "22:00",
                "label": "22:00",
                "type": "string",
                "value": "22:00"
              },
              {
                "icon": "clock-nine",
                "id": "23:00",
                "label": "23:00",
                "type": "string",
                "value": "23:00"
              },
              {
                "icon": "clock-nine",
                "id": "24:00",
                "label": "24:00",
                "type": "string",
                "value": "24:00"
              }
            ],
            "optionsSource": "Custom",
            "section": "",
            "title": "Peak Hour End",
            "tooltip": "",
            "type": "select",
            "uid": "e81272b9-540b-4c8c-b668-8367e375794f",
            "unit": "",
            "value": "",
            "width": 27
          },
          {
            "allowCustomValue": false,
            "id": "off_peak_hour_start",
            "labelColor": "#FFCB7D",
            "labelWidth": 18,
            "options": [
              {
                "icon": "clock-nine",
                "id": "00:00",
                "label": "00:00",
                "type": "string",
                "value": "00:00"
              },
              {
                "icon": "clock-nine",
                "id": "01:00",
                "label": "01:00",
                "type": "string",
                "value": "01:00"
              },
              {
                "icon": "clock-nine",
                "id": "02:00",
                "label": "02:00",
                "type": "string",
                "value": "02:00"
              },
              {
                "icon": "clock-nine",
                "id": "03:00",
                "label": "03:00",
                "type": "string",
                "value": "03:00"
              },
              {
                "icon": "clock-nine",
                "id": "04:00",
                "label": "04:00",
                "type": "string",
                "value": "04:00"
              },
              {
                "icon": "clock-nine",
                "id": "05:00",
                "label": "05:00",
                "type": "string",
                "value": "05:00"
              },
              {
                "icon": "clock-nine",
                "id": "06:00",
                "label": "06:00",
                "type": "string",
                "value": "06:00"
              },
              {
                "icon": "clock-nine",
                "id": "07:00",
                "label": "07:00",
                "type": "string",
                "value": "07:00"
              },
              {
                "icon": "clock-nine",
                "id": "08:00",
                "label": "08:00",
                "type": "string",
                "value": "08:00"
              },
              {
                "icon": "clock-nine",
                "id": "09:00",
                "label": "09:00",
                "type": "string",
                "value": "09:00"
              },
              {
                "icon": "clock-nine",
                "id": "10:00",
                "label": "10:00",
                "type": "string",
                "value": "10:00"
              },
              {
                "icon": "clock-nine",
                "id": "11:00",
                "label": "11:00",
                "type": "string",
                "value": "11:00"
              },
              {
                "icon": "clock-nine",
                "id": "12:00",
                "label": "12:00",
                "type": "string",
                "value": "12:00"
              },
              {
                "icon": "clock-nine",
                "id": "13:00",
                "label": "13:00",
                "type": "string",
                "value": "13:00"
              },
              {
                "icon": "clock-nine",
                "id": "14:00",
                "label": "14:00",
                "type": "string",
                "value": "14:00"
              },
              {
                "icon": "clock-nine",
                "id": "15:00",
                "label": "15:00",
                "type": "string",
                "value": "15:00"
              },
              {
                "icon": "clock-nine",
                "id": "16:00",
                "label": "16:00",
                "type": "string",
                "value": "16:00"
              },
              {
                "icon": "clock-nine",
                "id": "17:00",
                "label": "17:00",
                "type": "string",
                "value": "17:00"
              },
              {
                "icon": "clock-nine",
                "id": "18:00",
                "label": "18:00",
                "type": "string",
                "value": "18:00"
              },
              {
                "icon": "clock-nine",
                "id": "19:00",
                "label": "19:00",
                "type": "string",
                "value": "19:00"
              },
              {
                "icon": "clock-nine",
                "id": "20:00",
                "label": "20:00",
                "type": "string",
                "value": "20:00"
              },
              {
                "icon": "clock-nine",
                "id": "21:00",
                "label": "21:00",
                "type": "string",
                "value": "21:00"
              },
              {
                "icon": "clock-nine",
                "id": "22:00",
                "label": "22:00",
                "type": "string",
                "value": "22:00"
              },
              {
                "icon": "clock-nine",
                "id": "23:00",
                "label": "23:00",
                "type": "string",
                "value": "23:00"
              },
              {
                "icon": "clock-nine",
                "id": "24:00",
                "label": "24:00",
                "type": "string",
                "value": "24:00"
              }
            ],
            "optionsSource": "Custom",
            "section": "mon",
            "title": "Off-Peak Hour Start",
            "tooltip": "",
            "type": "select",
            "uid": "4c3ce6fb-7854-461f-a50c-1d8903782c60",
            "unit": "",
            "value": "",
            "width": 27
          },
          {
            "allowCustomValue": false,
            "id": "off_peak_hour_end",
            "labelColor": "#FFF899",
            "labelWidth": 18,
            "options": [
              {
                "icon": "clock-nine",
                "id": "00:00",
                "label": "00:00",
                "type": "string",
                "value": "00:00"
              },
              {
                "icon": "clock-nine",
                "id": "01:00",
                "label": "01:00",
                "type": "string",
                "value": "01:00"
              },
              {
                "icon": "clock-nine",
                "id": "02:00",
                "label": "02:00",
                "type": "string",
                "value": "02:00"
              },
              {
                "icon": "clock-nine",
                "id": "03:00",
                "label": "03:00",
                "type": "string",
                "value": "03:00"
              },
              {
                "icon": "clock-nine",
                "id": "04:00",
                "label": "04:00",
                "type": "string",
                "value": "04:00"
              },
              {
                "icon": "clock-nine",
                "id": "05:00",
                "label": "05:00",
                "type": "string",
                "value": "05:00"
              },
              {
                "icon": "clock-nine",
                "id": "06:00",
                "label": "06:00",
                "type": "string",
                "value": "06:00"
              },
              {
                "icon": "clock-nine",
                "id": "07:00",
                "label": "07:00",
                "type": "string",
                "value": "07:00"
              },
              {
                "icon": "clock-nine",
                "id": "08:00",
                "label": "08:00",
                "type": "string",
                "value": "08:00"
              },
              {
                "icon": "clock-nine",
                "id": "09:00",
                "label": "09:00",
                "type": "string",
                "value": "09:00"
              },
              {
                "icon": "clock-nine",
                "id": "10:00",
                "label": "10:00",
                "type": "string",
                "value": "10:00"
              },
              {
                "icon": "clock-nine",
                "id": "11:00",
                "label": "11:00",
                "type": "string",
                "value": "11:00"
              },
              {
                "icon": "clock-nine",
                "id": "12:00",
                "label": "12:00",
                "type": "string",
                "value": "12:00"
              },
              {
                "icon": "clock-nine",
                "id": "13:00",
                "label": "13:00",
                "type": "string",
                "value": "13:00"
              },
              {
                "icon": "clock-nine",
                "id": "14:00",
                "label": "14:00",
                "type": "string",
                "value": "14:00"
              },
              {
                "icon": "clock-nine",
                "id": "15:00",
                "label": "15:00",
                "type": "string",
                "value": "15:00"
              },
              {
                "icon": "clock-nine",
                "id": "16:00",
                "label": "16:00",
                "type": "string",
                "value": "16:00"
              },
              {
                "icon": "clock-nine",
                "id": "17:00",
                "label": "17:00",
                "type": "string",
                "value": "17:00"
              },
              {
                "icon": "clock-nine",
                "id": "18:00",
                "label": "18:00",
                "type": "string",
                "value": "18:00"
              },
              {
                "icon": "clock-nine",
                "id": "19:00",
                "label": "19:00",
                "type": "string",
                "value": "19:00"
              },
              {
                "icon": "clock-nine",
                "id": "20:00",
                "label": "20:00",
                "type": "string",
                "value": "20:00"
              },
              {
                "icon": "clock-nine",
                "id": "21:00",
                "label": "21:00",
                "type": "string",
                "value": "21:00"
              },
              {
                "icon": "clock-nine",
                "id": "22:00",
                "label": "22:00",
                "type": "string",
                "value": "22:00"
              },
              {
                "icon": "clock-nine",
                "id": "23:00",
                "label": "23:00",
                "type": "string",
                "value": "23:00"
              },
              {
                "icon": "clock-nine",
                "id": "24:00",
                "label": "24:00",
                "type": "string",
                "value": "24:00"
              }
            ],
            "optionsSource": "Custom",
            "section": "",
            "title": "Off-Peak Hour End",
            "tooltip": "",
            "type": "select",
            "uid": "3941185d-b749-429c-9416-d9829022f022",
            "unit": "",
            "value": "",
            "width": 27
          }
        ],
        "initial": {
          "code": "console.log(context.panel.data, context.panel.response, context.panel.initial, context.panel.elements);\n\nreturn;\n\n/**\n * Data Source\n * Requires form elements to be defined\n */\nconst dataQuery = context.utils.toDataQueryResponse(context.panel.response);\nconsole.log(dataQuery);",
          "contentType": "application/json",
          "getPayload": "return {}",
          "highlight": true,
          "highlightColor": "blue",
          "method": "-",
          "payload": {}
        },
        "layout": {
          "orientation": "horizontal",
          "padding": 10,
          "sectionVariant": "default",
          "sections": [],
          "variant": "single"
        },
        "reset": {
          "backgroundColor": "purple",
          "foregroundColor": "yellow",
          "icon": "process",
          "text": "Reset",
          "variant": "secondary"
        },
        "resetAction": {
          "code": "if (context.panel.response) {\n  context.grafana.notifySuccess(['Update', 'Values updated successfully.']);\n  context.grafana.locationService.reload();\n} else {\n  context.grafana.notifyError(['Update', 'An error occurred updating values.']);\n}",
          "confirm": true,
          "getPayload": "return {}",
          "mode": "initial",
          "payload": {}
        },
        "saveDefault": {
          "icon": "save",
          "text": "Save Default",
          "variant": "secondary"
        },
        "submit": {
          "backgroundColor": "purple",
          "foregroundColor": "yellow",
          "icon": "cloud-upload",
          "text": "Submit",
          "variant": "primary"
        },
        "sync": false,
        "update": {
          "code": "// Log the panel fields for debugging\nconsole.log(context.panel.fields);\n\n// Get the values from the fields (adjust as needed based on your form or input elements)\nconst meter_id = document.getElementById('meter_id'); // Assuming this is an input field\nconst day = document.getElementById('day');\nconst peak_rate = document.getElementById('peak_rate').value; // Convert to float\nconst off_peak_rate = document.getElementById('off_peak_rate').value; // Convert to float\nconst peak_hour_start = document.getElementById('peak_hour_start').value; // Convert datetime to time string (e.g., \"09:00:00\")\nconst peak_hour_end = document.getElementById('peak_hour_end').value; // Convert datetime to time string (e.g., \"18:00:00\")\nconst off_peak_hour_start = document.getElementById('off_peak_hour_start').value; // Convert datetime to time string (e.g., \"18:01:00\")\nconst off_peak_hour_end = document.getElementById('off_peak_hour_end').value; // Convert datetime to time string (e.g., \"07:59:00\")\n\n// Prepare the data payload for the POST request\nconst data = {\n  meter_id, // Meter ID\n  day, // Day\n  peak_rate, // Peak rate\n  off_peak_rate, // Off-peak rate\n  peak_hour_start, // Peak hour start time (HH:MM:SS)\n  peak_hour_end, // Peak hour end time (HH:MM:SS)\n  off_peak_hour_start, // Off-peak start time (HH:MM:SS)\n  off_peak_hour_end, // Off-peak end time (HH:MM:SS)\n};\n\n",
          "confirm": true,
          "contentType": "application/json",
          "getPayload": "const payload = {};\n\ncontext.panel.elements.forEach((element) => {\n  if (!element.value) {\n    return;\n  }\n\n  payload[element.id] = element.value;\n})\n\nreturn payload;",
          "method": "POST",
          "payload": {},
          "payloadMode": "all",
          "url": "http://localhost:3001/poprate"
        },
        "updateEnabled": "auto"
      },
      "pluginVersion": "5.0.0",
      "targets": [
        {
          "refId": "A"
        }
      ],
      "title": "Set Energy Rates & Operation Hour",
      "type": "volkovlabs-form-panel"
    },
    {
      "datasource": {
        "type": "grafana-postgresql-datasource",
        "uid": "be3kz7ctdto1sf"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "align": "center",
            "cellOptions": {
              "type": "auto"
            },
            "inspect": false
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 11,
        "w": 5,
        "x": 7,
        "y": 8
      },
      "id": 9,
      "options": {
        "cellHeight": "sm",
        "footer": {
          "countRows": false,
          "fields": "",
          "reducer": [
            "sum"
          ],
          "show": false
        },
        "showHeader": false
      },
      "pluginVersion": "11.3.0",
      "targets": [
        {
          "editorMode": "code",
          "format": "table",
          "rawQuery": true,
          "rawSql": "SELECT\r\n    meter_id,\r\n    day,\r\n    peak_rate,\r\n    off_peak_rate,\r\n    peak_hour_start,\r\n    peak_hour_end,\r\n    off_peak_hour_start,\r\n    off_peak_hour_end\r\nFROM poprate\r\nWHERE meter_id = '${meter_id}'\r\nAND day = '${day}'\r\nORDER BY timestamp DESC\r\nLIMIT 1;\r\n",
          "refId": "A",
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          }
        }
      ],
      "title": "Current Energy Rate & Operation Hour",
      "transformations": [
        {
          "id": "transpose",
          "options": {
            "firstFieldName": "meter_id"
          }
        }
      ],
      "type": "table"
    }
  ],
  "preload": false,
  "refresh": "5s",
  "schemaVersion": 40,
  "tags": [],
  "templating": {
    "list": [
      {
        "current": {
          "text": "ce6nm5hf7a2v4e",
          "value": "ce6nm5hf7a2v4e"
        },
        "datasource": {
          "type": "grafana-postgresql-datasource",
          "uid": "be3kz7ctdto1sf"
        },
        "definition": "SELECT pg_uid FROM pages WHERE pg_name = '$Pages'",
        "hide": 2,
        "name": "pg_uid",
        "options": [],
        "query": "SELECT pg_uid FROM pages WHERE pg_name = '$Pages'",
        "refresh": 1,
        "regex": "",
        "type": "query"
      },
      {
        "current": {
          "text": "Settings",
          "value": "Settings"
        },
        "hide": 2,
        "label": "Pages",
        "name": "Pages",
        "options": [
          {
            "selected": false,
            "text": "Main Dashboard",
            "value": "Main Dashboard"
          },
          {
            "selected": true,
            "text": "Settings",
            "value": "Settings"
          },
          {
            "selected": false,
            "text": "Drill-down Data",
            "value": "Drill-down Data"
          },
          {
            "selected": false,
            "text": "Raw Data",
            "value": "Raw Data"
          }
        ],
        "query": "Main Dashboard, Settings, Drill-down Data, Raw Data",
        "type": "custom"
      },
      {
        "current": {
          "text": "Admin",
          "value": "Admin"
        },
        "hide": 2,
        "name": "User",
        "options": [
          {
            "selected": true,
            "text": "Admin",
            "value": "Admin"
          },
          {
            "selected": false,
            "text": "Tenant 1",
            "value": "Tenant 1"
          },
          {
            "selected": false,
            "text": "Tenant 2",
            "value": "Tenant 2"
          },
          {
            "selected": false,
            "text": "Tenant 3",
            "value": "Tenant 3"
          },
          {
            "selected": false,
            "text": "Tenant 4",
            "value": "Tenant 4"
          },
          {
            "selected": false,
            "text": "Tenant 5",
            "value": "Tenant 5"
          }
        ],
        "query": "Admin, Tenant 1, Tenant 2, Tenant 3, Tenant 4, Tenant 5",
        "type": "custom"
      },
      {
        "current": {
          "text": "1",
          "value": "1"
        },
        "hide": 2,
        "label": "Meter ID",
        "name": "meter_id",
        "options": [
          {
            "selected": true,
            "text": "1",
            "value": "1"
          },
          {
            "selected": false,
            "text": "2",
            "value": "2"
          },
          {
            "selected": false,
            "text": "3",
            "value": "3"
          },
          {
            "selected": false,
            "text": "4",
            "value": "4"
          },
          {
            "selected": false,
            "text": "5",
            "value": "5"
          }
        ],
        "query": "1, 2, 3, 4, 5",
        "type": "custom"
      },
      {
        "current": {
          "text": "sunday",
          "value": "sunday"
        },
        "hide": 2,
        "label": "Day",
        "name": "day",
        "options": [
          {
            "selected": true,
            "text": "sunday",
            "value": "sunday"
          },
          {
            "selected": false,
            "text": "monday",
            "value": "monday"
          },
          {
            "selected": false,
            "text": "tuesday",
            "value": "tuesday"
          },
          {
            "selected": false,
            "text": "wednesday",
            "value": "wednesday"
          },
          {
            "selected": false,
            "text": "thursday",
            "value": "thursday"
          },
          {
            "selected": false,
            "text": "friday",
            "value": "friday"
          },
          {
            "selected": false,
            "text": "saturday",
            "value": "saturday"
          }
        ],
        "query": "sunday, monday, tuesday, wednesday, thursday, friday, saturday",
        "type": "custom"
      }
    ]
  },
  "time": {
    "from": "now-6M",
    "to": "now"
  },
  "timepicker": {
    "hidden": true
  },
  "timezone": "browser",
  "title": "Settings",
  "uid": "ce6nm5hf7a2v4e",
  "version": 157,
  "weekStart": ""
}